% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_functions.R
\name{mh}
\alias{mh}
\title{Fit a generic model using Metropolis-Hastings (MH)}
\usage{
mh(
  N,
  theta.init,
  qPROP,
  qFUN,
  logPOSTERIOR,
  nu = 0.001,
  varnames = NULL,
  param = list(),
  chains = 1,
  parallel = FALSE,
  ...
)
}
\arguments{
\item{N}{Number of MCMC samples}

\item{theta.init}{Vector of initial values for the parameters}

\item{qPROP}{Function to generate proposal}

\item{qFUN}{Probability for proposal function.  First argument is where to evaluate, and second argument is the conditional parameter}

\item{logPOSTERIOR}{Function to calculate and return the log posterior given a vector of values of \code{theta}}

\item{nu}{Single value or vector parameter passed to \code{qPROP} or \code{qFUN} for the proposal density}

\item{varnames}{Optional vector of theta parameter names}

\item{param}{List of additional parameters for \code{logPOSTERIOR} and \code{glogPOSTERIOR}}

\item{chains}{Number of MCMC chains to run}

\item{parallel}{Logical to set whether MCMC chains should be run in parallel}

\item{...}{Additional parameters for \code{logPOSTERIOR}}
}
\value{
Object of class \code{hmclearn}
}
\description{
This function runs the MH algorithm on a generic model provided
the \code{logPOSTERIOR} function.
All parameters specified within the list \code{param} are passed to these the posterior function.
}
\section{Elements for \code{hmclearn} objects}{

\describe{
  \item{\code{N}}{
  Number of MCMC samples
  }
  \item{\code{theta}}{
  Nested list of length \code{N} of the sampled values of \code{theta} for each chain
  }
  \item{\code{thetaCombined}}{
  List of dataframes containing sampled values, one for each chain
  }
  \item{\code{r}}{
  NULL for Metropolis-Hastings
  }
  \item{\code{theta.all}}{
  Nested list of all parameter values of \code{theta} sampled prior to accept/reject step for each
  }
  \item{\code{r.all}}{
  NULL for Metropolis-Hastings
  }
  \item{\code{accept}}{
  Number of accepted proposals.  The ratio \code{accept} / \code{N} is the acceptance rate
  }
  \item{\code{accept_v}}{
  Vector of length \code{N} indicating which samples were accepted
  }
  \item{\code{M}}{
  NULL for Metropolis-Hastings
  }
  \item{\code{algorithm}}{
  \code{MH} for Metropolis-Hastings
  }
  \item{\code{varnames}}{
  Optional vector of parameter names
  }
  \item{\code{chains}}{
  Number of MCMC chains
  }
}
}

\section{Available \code{logPOSTERIOR} functions}{

\describe{
  \item{\code{linear_posterior}}{
  Linear regression:  log posterior
  }
  \item{\code{logistic_posterior}}{
  Logistic regression:  log posterior
  }
  \item{\code{poisson_posterior}}{
  Poisson (count) regression:  log posterior
  }
  \item{\code{lmm_posterior}}{
  Linear mixed effects model:  log posterior
  }
  \item{\code{glmm_bin_posterior}}{
  Logistic mixed effects model:  log posterior
  }
  \item{\code{glmm_poisson_posterior}}{
  Poisson mixed effects model:  log posterior
  }
}
}

\examples{
# Logistic regression example
X <- cbind(1, seq(-100, 100, by=0.25))
betavals <- c(-0.9, 0.2)
lodds <- X \%*\% betavals
prob1 <- as.numeric(1 / (1 + exp(-lodds)))

set.seed(9874)
y <- sapply(prob1, function(xx) {
  sample(c(0, 1), 1, prob=c(1-xx, xx))
})

f1 <- mh(N = 1000,
         theta.init = rep(0, 2),
         nu = c(0.03, 0.001),
         qPROP = qprop,
         qFUN = qfun,
         logPOSTERIOR = logistic_posterior,
         varnames = paste0("beta", 0:1),
         param = list(y=y, X=X),
         parallel=FALSE, chains=1)

summary(f1, burnin=500)
mcmc_trace(f1, burnin=500)
mcmc_hist(f1, burnin=500)

# poisson regression example
set.seed(7363)
X <- cbind(1, matrix(rnorm(40), ncol=2))
betavals <- c(0.8, -0.5, 1.1)
lmu <- X \%*\% betavals
y <- sapply(exp(lmu), FUN = rpois, n=1)

f3 <- mh(N = 1000,
         theta.init = rep(0, 3),
         nu = rep(0.01, 3),
         qPROP = qprop,
         qFUN = qfun,
         logPOSTERIOR = poisson_posterior,
         varnames = paste0("beta", 0:2),
         param = list(y=y, X=X),
         parallel=FALSE, chains=1)

summary(f3)
mcmc_trace(f3, burnin=500)
mcmc_hist(f3, burnin=500)

\donttest{
# Linear regression example
set.seed(521)
X <- cbind(1, matrix(rnorm(300), ncol=3))
betavals <- c(0.5, -1, 2, -3)
y <- X\%*\%betavals + rnorm(100, sd=.2)

f3 <- mh(N = 2000,
         theta.init = c(rep(0, 4), 1),
         nu <- c(rep(0.001, 4), 0.1),
         qPROP = qprop,
         qFUN = qfun,
         logPOSTERIOR = linear_posterior,
         varnames = c(paste0("beta", 0:3), "log_sigma_sq"),
         param=list(y=y, X=X), parallel=FALSE, chains=1)

summary(f3)
mcmc_trace(f3, burnin=1000)
mcmc_hist(f3, burnin=1000)

# linear regression
data(warpbreaks)

X <- model.matrix(breaks ~ wool*tension, data=warpbreaks)
y <- warpbreaks$breaks

Nmh <- 1e5
nuval <- c(rep(4, 6), 1e-1)
fm1_mh <- mh(Nmh, theta.init = c(rep(0, 6), 1), nu=nuval,
             qPROP = qprop, qFUN = qfun,
             logPOSTERIOR = linear_posterior,
             varnames = c(colnames(X), "log_sigma_sq"),
             param=list(y=y, X=X), parallel= TRUE, chains=2)

fm1_mh$accept / Nmh

summary(fm1_mh, burnin=1000)
mcmc_trace(fm1_mh, burnin=1000)
mcmc_hist(fm1_mh, burnin=1000)

# poisson regression

library(carData)
data(AMSsurvey)

# design matrix
X <- model.matrix(count ~ type + sex + citizen, data=AMSsurvey)

# independent variable is count data
y <- AMSsurvey$count
p <- ncol(X)

Nmh <- 5e4

nuval <- c(rep(1, p-1), 1e-1)

fm3_mh <- mh(Nmh, theta.init =rep(0, p), nu=1e-3,
             qPROP = qprop, qFUN = qfun,
             logPOSTERIOR = poisson_posterior,
             varnames = colnames(X),
             param=list(y=y, X=X))

fm3_mh$accept / Nmh

summary(fm3_mh)

mcmc_trace(fm3_mh, burnin=1000)
mcmc_dens(fm3_mh, burnin=1000)
}

}
\author{
Samuel Thomas \email{samthoma@iu.edu}, Wanzhu Tu \email{wtu@iu.edu}
}
